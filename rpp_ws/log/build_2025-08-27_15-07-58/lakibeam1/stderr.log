[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:[m[K In function â€˜[01m[Ksize_t dummy_callback(void*, size_t, size_t, void*)[m[Kâ€™:
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:16:36:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kbuffer[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   16 | static size_t dummy_callback([01;35m[Kvoid *buffer[m[K, size_t size, size_t nmemb, void *userp)
      |                              [01;35m[K~~~~~~^~~~~~[m[K
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:16:77:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kuserp[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   16 | static size_t dummy_callback(void *buffer, size_t size, size_t nmemb, [01;35m[Kvoid *userp[m[K)
      |                                                                       [01;35m[K~~~~~~^~~~~[m[K
In file included from [01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:4[m[K:
/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h: In instantiation of â€˜[01m[Kvoid rapidjson::GenericValue<Encoding, Allocator>::SetObjectRaw(rapidjson::GenericValue<Encoding, Allocator>::Member*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::GenericValue<Encoding, Allocator>::Member = rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >; rapidjson::SizeType = unsigned int][m[Kâ€™:
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2363:55:[m[K   required from â€˜[01m[Kbool rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::EndObject(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::SizeType = unsigned int][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:1736:40:[m[K   required from â€˜[01m[Krapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Transit(rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState, rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Token, rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState, InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:1832:58:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParse(InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:487:46:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Parse(InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2159:57:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::ParseStream(InputStream&) [with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2224:55:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const typename SourceEncoding::Ch*) [with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; typename SourceEncoding::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2233:43:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 0; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2240:41:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:76:16:[m[K   required from here
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:1952:24:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid* memcpy(void*, const void*, size_t)[m[Kâ€™ writing to an object of type â€˜[01m[Krapidjson::GenericValue<rapidjson::UTF8<> >::Member[m[Kâ€™ {aka â€˜[01m[Kstruct rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >[m[Kâ€™} with no trivial copy-assignment; use copy-assignment instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wclass-memaccess-Wclass-memaccess]8;;[m[K]
 1952 |             [01;35m[Kstd::memcpy(m, members, count * sizeof(Member))[m[K;
      |             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:4[m[K:
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:71:8:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krapidjson::GenericValue<rapidjson::UTF8<> >::Member[m[Kâ€™ {aka â€˜[01m[Kstruct rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >[m[Kâ€™} declared here
   71 | struct [01;36m[KGenericMember[m[K {
      |        [01;36m[K^~~~~~~~~~~~~[m[K
In file included from [01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:4[m[K:
/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h: In instantiation of â€˜[01m[Kvoid rapidjson::GenericValue<Encoding, Allocator>::SetArrayRaw(rapidjson::GenericValue<Encoding, Allocator>*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int][m[Kâ€™:
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2371:54:[m[K   required from â€˜[01m[Kbool rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::EndArray(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::SizeType = unsigned int][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:1766:39:[m[K   required from â€˜[01m[Krapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Transit(rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState, rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Token, rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState, InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:1832:58:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParse(InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/reader.h:487:46:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Parse(InputStream&, Handler&) [with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2159:57:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::ParseStream(InputStream&) [with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2224:55:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const typename SourceEncoding::Ch*) [with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; typename SourceEncoding::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2233:43:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 0; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:2240:41:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char][m[Kâ€™
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/remote.cpp:76:16:[m[K   required from here
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:1939:24:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid* memcpy(void*, const void*, size_t)[m[Kâ€™ writing to an object of type â€˜[01m[Kclass rapidjson::GenericValue<rapidjson::UTF8<> >[m[Kâ€™ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wclass-memaccess-Wclass-memaccess]8;;[m[K]
 1939 |             [01;35m[Kstd::memcpy(e, values, count * sizeof(GenericValue))[m[K;
      |             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/rpp/rpp_ws/src/drivers/lakibeam1/lakibeam1_ros2_v1_0_0/src/../thirdparty/rapidjson/document.h:540:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kclass rapidjson::GenericValue<rapidjson::UTF8<> >[m[Kâ€™ declared here
  540 | class [01;36m[KGenericValue[m[K {
      |       [01;36m[K^~~~~~~~~~~~[m[K
