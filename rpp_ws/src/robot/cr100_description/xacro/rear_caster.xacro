<?xml version="1.0" encoding="UTF-8"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro" name="rear_caster">
    <!-- caster_prefix: name left_right_mirror: left and right mirror <1 left, -1 right> -->
    <!--Use
    the left front caster as a reference to write-->
    <xacro:include filename="$(find cr100_description)/xacro/inertial_matrix.xacro" />

    <xacro:macro name="rear_caster" params="caster_prefix left_right_mirror sim_gazebo:=false">
        <link name="caster_${caster_prefix}B_link">
            <inertial>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <!-- <xacro:cylinder_inertial_matrix m="5" r="${caster_RL_radius}" h="${caster_RL_length}" /> -->
                <xacro:sphere_inertial_matrix m="5" r="${caster_RL_radius}" />
            </inertial>

            <visual>
                <xacro:if value="${1 == left_right_mirror}">
                    <origin xyz="0 0 0" rpy="0 0 0" />
                </xacro:if>
                <xacro:if value="${-1 == left_right_mirror}">
                    <origin xyz="0 0 0" rpy="${PI} 0 0" />
                </xacro:if>
                <geometry>
                    <mesh filename="package://cr100_description/meshes/caster_LB_link.STL" />
                </geometry>
                <material name="">
                    <color rgba="0.941176470588235 0.674509803921569 0.117647058823529 1" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
                <geometry>
                    <cylinder length="${caster_RL_length}" radius="${caster_RL_radius}" />
                </geometry>
            </collision>
        </link>
        <joint name="caster_${caster_prefix}B_joint" type="continuous">
            <parent link="base_link" />
            <child link="caster_${caster_prefix}B_link" />
            <dynamics damping="0.0"/> <!-- 必须为零 -->
            <limit effort="0.01" velocity="100"/> <!-- 禁用扭矩限制 -->
            <xacro:if value="${1 == left_right_mirror}">
                <origin xyz="${caster_LB_x} ${caster_LB_y * left_right_mirror} ${caster_LB_z}" rpy="0 0 0" />
                <axis xyz="0 ${1} 0" rpy="0 0 0" />
            </xacro:if>
            <xacro:if value="${-1 == left_right_mirror}">
                <origin xyz="${caster_LB_x} ${caster_LB_y * left_right_mirror} ${caster_LB_z}" rpy="0 0 0" />
                <axis xyz="0 ${1} 0" rpy="0 0 0" />
            </xacro:if>
        </joint>

        <xacro:if value="${sim_gazebo}">
            <gazebo reference="caster_${caster_prefix}B_link">
                <mu1 value="0.0" />
                <mu2 value="0.0" />
                <!-- <kp value="1000000.0" />
                <kd value="1.0" />
                <fdir1 value="1 0 0" />
                <material>Gazebo/Black</material> -->
            </gazebo>
            <ros2_control name="caster_${caster_prefix}B_link" type="system">
                <hardware>
                    <plugin>gazebo_ros2_control/GazeboSystem</plugin>
                </hardware>
                <joint name="caster_${caster_prefix}B_joint">
                    <command_interface name="velocity">
                    </command_interface>
                    <state_interface name="position" />
                    <state_interface name="velocity" />
                </joint>
            </ros2_control>
        </xacro:if>
    </xacro:macro>
</robot>